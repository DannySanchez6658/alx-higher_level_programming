The ``1-my_list`` Module
=======================

Using ``MyList``

Let's import the module:
	>>> MyList = __import__('1-my_list').MyList

Let's test in the normal case:
	>>> my_list = MyList()
	>>> my_list.append(1)
	>>> my_list.append(4)
	>>> my_list.append(2)
	>>> my_list.append(3)
	>>> my_list.append(5)
	>>> print(my_list)
	[1, 4, 2, 3, 5]
	>>> my_list.print_sorted()
	[1, 2, 3, 4, 5]
	>>> print(my_list)
	[1, 4, 2, 3, 5]

Let's test if MyList is a subclass of list:
	>>> issubclass(MyList, list)
	True

Let's test our function giving same value:
	>>> my_list = MyList()
	>>> my_list.append(2)
	>>> my_list.append(1)
	>>> my_list.append(1)
	>>> my_list.append(0)
	>>> my_list.append(0)
	>>> print(my_list)
	[2, 1, 1, 0, 0]
	>>> my_list.print_sorted()
	[0, 0, 1, 1, 2]

Let's test it with empty list:
	>>> my_list = MyList()
	>>> my_list.print_sorted()
	[]

Let's test it without an object:
	>>> my_list = [9, 4, 6, 7]
	>>> my_list.print_sorted()
	Traceback (most recent call last):
		...
	AttributeError: 'list' object has no attribute 'print_sorted'

Let's pass a list to the class:
	>>> new_list = [6, 2, 1, 3]
	>>> my_list = MyList(new_list)
	>>> my_list.print_sorted()
	[1, 2, 3, 6]

Let's pass another list:
	>>> new_list.print_sorted()
	Traceback (most recent call last):
		...
	NameError: name 'new_list' is not defined


