The ``BaseGeometry`` Module
==============================

Using ``BaseGeometry``
---------------------



Let's import the module:
	>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry


Let' check it normally:
	>>> bg = BaseGeometry()
	>>> bg.integer_validator("my_int", 12)

Let's check it with a negative value:
	>>> bg = BaseGeometry()
	>>> bg.integer_validator("my_int", -12)
	Traceback (most recent call last):
		...
	ValueError: my_int must be greater than 0

Let's check it with string value:
	>>> bg = BaseGeometry()
	>>> bg.integer_validator("my_int", '12')
	Traceback (most recent call last):
		...
	TypeError: my_int must be an integer

Let's check it with value of 0:
	>>> bg = BaseGeometry()
	>>> bg.integer_validator("my_int", 0)
	Traceback (most recent call last):
		...
	ValueError: my_int must be greater than 0

Let's check it with empty argument:
	>>> bg = BaseGeometry()
	>>> bg.integer_validator()
	Traceback (most recent call last):
		...
	TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'

Let's check it with 1 argument:
	>>> bg = BaseGeometry()
	>>> bg.integer_validator("my_int")
	Traceback (most recent call last):
		...
	TypeError: integer_validator() missing 1 required positional argument: 'value'

Let's check it by giving it list:
        >>> bg = BaseGeometry()
        >>> bg.integer_validator("my_int", [1, 2, 3])
	Traceback (most recent call last):
                ...
	TypeError: my_int must be an integer

Let's test it with tuple:
	>>> bg = BaseGeometry()
	>>> bg.integer_validator("my_int", (2,3))
	Traceback (most recent call last):
		...
	TypeError: my_int must be an integer

Lets test it with value None:
        >>> bg = BaseGeometry()
        >>> bg.integer_validator("age", None)
        Traceback (most recent call last):
                ...
        TypeError: age must be an integer

Let's test it with dictionary:
        >>> bg = BaseGeometry()
        >>> bg.integer_validator("age", {9,10})
        Traceback (most recent call last):
                ...
        TypeError: age must be an integer

Let's test the area method:
   	>>> bg = BaseGeometry()
    	>>> bg.area()
	Traceback (most recent call last):
          	...
    	Exception: area() is not implemented

Let's test area method by giving value:
	>>> bg = BaseGeometry()
    	>>> bg.area(9)
    	Traceback (most recent call last):
    	        ...
    	TypeError: area() takes 1 positional argument but 2 were given

Let's test it by giving the area 2 arguments:
    	>>> bg = BaseGeometry()
    	>>> bg.area(8, 9)
    	Traceback (most recent call last):
    	        ...
    	TypeError: area() takes 1 positional argument but 3 were given
